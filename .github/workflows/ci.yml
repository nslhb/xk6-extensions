name: CI

on:
  # Enable manually triggering this workflow via the API or web UI
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  build-with-xk6:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-
      - name: Retrieve get module name
        run: |
          echo "::set-output name=Module::$(go list -m)"
        id: module-name
      - name: Verify builds with xk6
        run: |
          go install go.k6.io/xk6/cmd/xk6@latest
          xk6 build --with ${{ steps.module-name.outputs.Module }}=.

#  //FIXME
#  test-mqtt:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Run mqtt broker
#        run: docker run -p 1883:1883 -e "DOCKER_VERNEMQ_ACCEPT_EULA=yes" -e DOCKER_VERNEMQ_ALLOW_ANONYMOUS=on --name vernemq -d vernemq/vernemq
#
#      - name: Go tests
#        run: go test -race ./...
#
#      - name: Test from source
#        run: xk6 build --with github.com/pmalhaire/xk6-mqtt=. && ./k6 run --vus 50 --duration 10s examples/test.js
#
#      - name: Test tls
#        run: docker run -d -v $PWD/docker_conf/mosquitto:/conf --rm --name mosquitto_tls -p 8883:8883 eclipse-mosquitto mosquitto -c /conf/mosquitto-tls.conf
#
#      - name: Test tls from source
#        run: xk6 run ./examples/test_ssl.js -i 1

  run-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
      - name: Run unit tests
        run: go test -v -cover -race ./...

#   build:
#     name: Build
#     runs-on: ubuntu-latest
# #    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Install Go
#         uses: actions/setup-go@v3
#         with:
#           go-version: 1.18.x
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
#       - name: cache docker cache
#         uses: actions/cache@v3
#         with:
#           path: ${{ github.workspace }}/cache
#           key: ${{ runner.os }}-docker-${{ hashfiles('cache/**') }}
#           restore-keys: |
#             ${{ runner.os }}-docker-
#       - name: Login to GitHub Packages Docker Registry
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}
#       - name: Build and push
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           platforms: linux/amd64,linux/arm64
#           push: true
#           tags: ghcr.io/rverma-nsl/k6:latest
